# This docker-compose is only to get started with Conduktor.
# It is starting Conduktor, a Redpanda cluster (Kafka), and a fake app to generate traffic.

# Go to http://localhost:8080 when started

####################################################################################################
# DO NOT USE IT IN PRODUCTION
#
# For production, please check: https://docs.conduktor.io/platform/category/deployment-options/
#   to deploy on Kubernetes via Helm, or AWS using Cloudformation.
####################################################################################################

version: '3.8'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
  sathishdockerkafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka_sathishdocker
    container_name: sathishdockerkafka
    ports:
      - "7092:7092"
      - "27092:27092"
      - "7999:7999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka_sathishdocker:17092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:7092,DOCKER://host.docker.internal:27092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=DEBUG,kafka.producer.async.DefaultEventHandler=DEBUG,state.change.logger=ERROR"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 7999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
  sathishdockerkafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "9081:9081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka_sathishdocker:17092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:9081
    depends_on:
      - zoo1
      - sathishdockerkafka
  # Conduktor Console, the enterprise UI.
  # It depends on PostgreSQL. Here, we depend on Redpanda only for our get-started.
  # https://docs.conduktor.io/platform/get-started/configuration/introduction/
  conduktor-console:
    image: conduktor/conduktor-console:1.24.0
    hostname: sathishconduktor-console
    container_name: sathishconduktor-console
    depends_on:
      - postgresql
      - sathishdockerkafka
      - sathishdockerkafka-schema-registry
    ports:
      - "9080:9080"
    volumes:
      - type: bind
        source: "./config.yaml"
        target: /opt/conduktor/config.yaml
        read_only: true
      - conduktor_data:/var/conduktor
    environment:
      CDK_IN_CONF_FILE: /opt/conduktor/config.yaml
      CDK_LISTENING_PORT: "9080"
      CDK_DATABASE_URL: "postgresql://conduktor:change_me@postgresql:5436/conduktor-console"
      CDK_CLUSTERS_0_ID: "sathish-local-kafka"
      CDK_CLUSTERS_0_NAME: "sathish-local-kafka"
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka_sathishdocker:17092"
      CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://kafka-schema-registry:9081"
      CDK_CLUSTERS_0_COLOR: "#6A57C8"
      CDK_CLUSTERS_0_ICON: "kafka"
      CDK_MONITORING_CORTEX-URL: http://conduktor-monitoring:9009/
      CDK_MONITORING_ALERT-MANAGER-URL: http://conduktor-monitoring:9010/
      CDK_MONITORING_CALLBACK-URL: http://conduktor-console:9080/monitoring/api/
      CDK_MONITORING_NOTIFICATIONS-CALLBACK-URL: http://localhost:9080
      
  # Conduktor stores its metadata in PostgreSQL.
  # Consider using an external managed database for production usage.
  # https://docs.conduktor.io/platform/get-started/configuration/database/
  postgresql:
    image: postgres:14
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      PGDATA: "/var/lib/postgresql/data"
      PGPORT: "5436"
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "change_me"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"

  # Conduktor uses Cortex to store Kafka and applications metrics as well as alerting.
  # It is optional. 
  # https://docs.conduktor.io/platform/get-started/configuration/cortex/
  conduktor-monitoring:
    image: conduktor/conduktor-console-cortex:1.24.0
    environment:
      CDK_CONSOLE-URL: "http://sathishconduktor-console:9080"

volumes:
  pg_data: {}
  conduktor_data: {}
